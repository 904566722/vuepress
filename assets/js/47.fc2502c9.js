(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{370:function(a,t,s){"use strict";s.r(t);var e=s(10),v=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("blockquote",[s("ul",[s("li",[a._v("如何把变动的事物与保持不变的事物区分开来")]),a._v(" "),s("li",[a._v("访问权限控制的等级（大->小）：public、protected、包访问权限（没有关键词）、private")])])]),a._v(" "),s("h2",{attrs:{id:"包：库单元"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包：库单元"}},[a._v("#")]),a._v(" 包：库单元")]),a._v(" "),s("h3",{attrs:{id:"代码组织"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码组织"}},[a._v("#")]),a._v(" 代码组织")]),a._v(" "),s("ul",[s("li",[a._v("编译一个.java文件，文件中的每个类都会有一个输出文件.class，文件名与类名相同")]),a._v(" "),s("li",[a._v("Java的可运行程序是一组可以打包并压缩为一个Java文档文件（"),s("code",[a._v("JAR")]),a._v("）的.class文件。Java解释器负责这些文件的查找、装载和解释")]),a._v(" "),s("li",[a._v("类库 ---实际上---\x3e 一组类晚间")]),a._v(" "),s("li",[a._v("Java包的命名规则全部使用小写字母")])]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("access"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mypackage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* ... */")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("使用import来使access中的名称可用")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("access"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mypackage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyClass")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"创建独一无二的包名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建独一无二的包名"}},[a._v("#")]),a._v(" 创建独一无二的包名")]),a._v(" "),s("ul",[s("li",[a._v("package名称的第一部分：类的创建者的反序Internet域名")])]),a._v(" "),s("blockquote",[s("p",[a._v("思考："),s("code",[a._v("条件编译")])])]),a._v(" "),s("h2",{attrs:{id:"java访问权限修饰词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java访问权限修饰词"}},[a._v("#")]),a._v(" Java访问权限修饰词")]),a._v(" "),s("h3",{attrs:{id:"包访问权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包访问权限"}},[a._v("#")]),a._v(" 包访问权限")]),a._v(" "),s("ul",[s("li",[a._v("默认访问权限（没有任何关键字）")]),a._v(" "),s("li",[a._v("有时也表示成friendly\n包中的类相对于：")])]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("当前包所有其他类")]),a._v(" "),s("th",[a._v("包之外的所有类")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("有访问权限")]),a._v(" "),s("td",[a._v("相当于与private")])])])]),a._v(" "),s("p",[a._v("取得某成员的访问权限的途径")]),a._v(" "),s("ul",[s("li",[a._v("使改成员为public")]),a._v(" "),s("li",[a._v("成员不加修饰词 & 其他类置于同一个包")]),a._v(" "),s("li",[a._v("继承 - 可访问public成员、protected成员")]),a._v(" "),s("li",[a._v("提供访问其（accessor）和变异器（mutator） - get/set方法")])]),a._v(" "),s("h3",{attrs:{id:"public：接口访问权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#public：接口访问权限"}},[a._v("#")]),a._v(" public：接口访问权限")]),a._v(" "),s("h3",{attrs:{id:"private：你无法访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#private：你无法访问"}},[a._v("#")]),a._v(" private：你无法访问")]),a._v(" "),s("blockquote",[s("p",[a._v("通常考虑的是，那些成员是想要明确公开给客户端程序员使用的，从而将它们声明为public，而在最初，你可能不会认为自己经常会需要使用private，因为没有它，照样可以工作。然而，事实很快就会证明，对private的使用是多么的重要，在多线程下更是如此。")])]),a._v(" "),s("ul",[s("li",[a._v("任何可以肯定只是该类的一个“助手”方法的方法，都可以把它指定为private，确保不会在包内的其他地方误用")])]),a._v(" "),s("h3",{attrs:{id:"protected：继承访问权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#protected：继承访问权限"}},[a._v("#")]),a._v(" protected：继承访问权限")]),a._v(" "),s("h2",{attrs:{id:"接口和实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口和实现"}},[a._v("#")]),a._v(" 接口和实现")]),a._v(" "),s("p",[a._v("访问权限的控制->具体实现的隐藏、封装")]),a._v(" "),s("ul",[s("li",[a._v("设定客户端程序员可以使用和不可以使用的边界")]),a._v(" "),s("li",[a._v("将接口和具体实现进行分离")])]),a._v(" "),s("h2",{attrs:{id:"类的访问权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类的访问权限"}},[a._v("#")]),a._v(" 类的访问权限")]),a._v(" "),s("ul",[s("li",[a._v("对于类的访问权限，仅有两个选择：包访问权限或public")])]),a._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("ul",[s("li",[a._v("控制成员的访问权限的两个原因：\n"),s("ul",[s("li",[a._v("使用户不要触碰那些不该触碰的部分")]),a._v(" "),s("li",[a._v("让类库设计者可以更改类的内部工作方式")])]),a._v(" "),s("blockquote",[s("p",[a._v("面向扩展开放，面向修改关闭")])])])]),a._v(" "),s("blockquote",[s("p",[a._v("当具备了改变底层实施细节的能力，不仅可以随意地改善设计，还可能会随意地犯错误，当了解到你所犯的错误是相对安全的时候，就可以更加放心地进行实验，也就可以更快地学会，更快地完成项目")])])])}),[],!1,null,null,null);t.default=v.exports}}]);