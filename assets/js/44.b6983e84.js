(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{364:function(t,e,a){"use strict";a.r(e);var s=a(10),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"什么是docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是docker"}},[t._v("#")]),t._v(" 什么是Docker")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网地址"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Docker 使用 Google 公司推出的 "),a("a",{attrs:{href:"https://golang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go 语言"),a("OutboundLink")],1),t._v(" 进行开发实现，基于 Linux 内核的 "),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Cgroups",target:"_blank",rel:"noopener noreferrer"}},[t._v("cgroup"),a("OutboundLink")],1),t._v("，"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Linux_namespaces",target:"_blank",rel:"noopener noreferrer"}},[t._v("namespace"),a("OutboundLink")],1),t._v("，以及 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Aufs",target:"_blank",rel:"noopener noreferrer"}},[t._v("AUFS"),a("OutboundLink")],1),t._v(" 类的 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Union_mount",target:"_blank",rel:"noopener noreferrer"}},[t._v("Union FS"),a("OutboundLink")],1),t._v(" 等技术，对进程进行封装隔离，属于 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Operating-system-level_virtualization",target:"_blank",rel:"noopener noreferrer"}},[t._v("操作系统层面的虚拟化技术"),a("OutboundLink")],1),t._v("。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。")]),t._v(" "),a("h3",{attrs:{id:"docker与传统化虚拟方式的比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker与传统化虚拟方式的比较"}},[t._v("#")]),t._v(" Docker与传统化虚拟方式的比较")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images.cnblogs.com/cnblogs_com/hhhqqq/1859898/o_20100901553238EA95I81DSFX__$5EVGZR4.png",alt:"Docker与传统化虚拟方式的比较"}})]),t._v(" "),a("h2",{attrs:{id:"为什么要使用docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用docker"}},[t._v("#")]),t._v(" 为什么要使用Docker")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("更高效利用系统资源")]),t._v(" "),a("p",[t._v("由于容器不需要进行硬件虚拟以及运行完整操作系统等额外开销，Docker 对系统资源的利用率更高，一个相同配置的主机，往往可以运行更多数量的应用")])]),t._v(" "),a("li",[a("p",[t._v("更少的启动时间")]),t._v(" "),a("p",[t._v("Docker容器运行于宿主内核，无需启动完整的操作系统，节约开发、测试、部署的时间")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("一致的运行环境")])]),t._v(" "),a("p",[t._v("由于开发环境、测试环境、生产环境不一致，可能导致某些bug。而 Docker 的镜像提供了除内核外完整的运行时环境，确保了应用运行环境一致性。")])]),t._v(" "),a("li",[a("p",[t._v("持续交付和部署")]),t._v(" "),a("p",[t._v("Docker 可以通过定制应用镜像来实现持续集成、持续交付、部署。开发人员可以通过 "),a("code",[t._v("Dockerfile")]),t._v(" 来进行镜像构建，而且使用 "),a("code",[t._v("Dockerfile")]),t._v(" 使镜像构建透明化，不仅仅开发团队可以理解应用运行环境，也方便运维团队理解应用运行所需条件，帮助更好的生产环境中部署该镜像。")])]),t._v(" "),a("li",[a("p",[t._v("轻松的迁移")]),t._v(" "),a("p",[t._v("由于 Docker 确保了执行环境的一致性，使得应用的迁移更加容易")])]),t._v(" "),a("li",[a("p",[t._v("总结")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("特性")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("容器")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("虚拟机")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("启动")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("秒级")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("分钟级")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("硬盘使用")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一般为 "),a("code",[t._v("MB")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一般为 "),a("code",[t._v("GB")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("性能")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("接近原生")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("弱于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("系统支持量")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("单机支持上千个容器")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一般几十个")])])])])])]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("blockquote",[a("p",[t._v("环境：CentOS 7.0")])]),t._v(" "),a("h3",{attrs:{id:"使用官方提供的简化脚本安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用官方提供的简化脚本安装"}},[t._v("#")]),t._v(" 使用官方提供的简化脚本安装")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL get.docker.com -o get-docker.sh\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" get-docker.sh --mirror Aliyun\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"启动-docker-ce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动-docker-ce"}},[t._v("#")]),t._v(" 启动 Docker CE")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" docker\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start docker\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"建立-docker-用户组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建立-docker-用户组"}},[t._v("#")]),t._v(" 建立 docker 用户组")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("groupadd")]),t._v(" docker\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("usermod")]),t._v(" -aG docker "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"测试-docker-是否安装正确"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试-docker-是否安装正确"}},[t._v("#")]),t._v(" 测试 Docker 是否安装正确")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ docker run hello-world\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"设置阿里云镜像加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置阿里云镜像加速"}},[t._v("#")]),t._v(" 设置阿里云镜像加速")]),t._v(" "),a("blockquote",[a("p",[t._v("待补充")])]),t._v(" "),a("h2",{attrs:{id:"docker-镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像"}},[t._v("#")]),t._v(" Docker 镜像")]),t._v(" "),a("blockquote",[a("p",[t._v('"基于镜像实例化容器"')])]),t._v(" "),a("h3",{attrs:{id:"使用-dokerfile-定制镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-dokerfile-定制镜像"}},[t._v("#")]),t._v(" 使用 Dokerfile 定制镜像")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("指令")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("FROM")]),t._v(" "),a("td",[t._v("指定基础镜像")])]),t._v(" "),a("tr",[a("td",[t._v("RUN")]),t._v(" "),a("td",[t._v("执行命令")])]),t._v(" "),a("tr",[a("td",[t._v("COPY")]),t._v(" "),a("td",[t._v("复制文件")])]),t._v(" "),a("tr",[a("td",[t._v("ADD")]),t._v(" "),a("td",[t._v("更高级的复制文件")])]),t._v(" "),a("tr",[a("td",[t._v("CMD")]),t._v(" "),a("td",[t._v("容器启动命令")])]),t._v(" "),a("tr",[a("td",[t._v("ENTRYPOINT")]),t._v(" "),a("td",[t._v("入口点")])]),t._v(" "),a("tr",[a("td",[t._v("ENV")]),t._v(" "),a("td",[t._v("设置环境变量")])]),t._v(" "),a("tr",[a("td",[t._v("ARG")]),t._v(" "),a("td",[t._v("构建参数")])]),t._v(" "),a("tr",[a("td",[t._v("VOLUME")]),t._v(" "),a("td",[t._v("定义匿名卷")])]),t._v(" "),a("tr",[a("td",[t._v("EXPOSE")]),t._v(" "),a("td",[t._v("暴露端口")])]),t._v(" "),a("tr",[a("td",[t._v("WORKDIR")]),t._v(" "),a("td",[t._v("指定工作目录")])]),t._v(" "),a("tr",[a("td",[t._v("USER")]),t._v(" "),a("td",[t._v("指定当前目录")])]),t._v(" "),a("tr",[a("td",[t._v("HEALTHCHECK")]),t._v(" "),a("td",[t._v("健康检查")])]),t._v(" "),a("tr",[a("td",[t._v("...")]),t._v(" "),a("td",[t._v("...")])])])]),t._v(" "),a("h2",{attrs:{id:"实战-docker-部署-springboot-多模块项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实战-docker-部署-springboot-多模块项目"}},[t._v("#")]),t._v(" 实战 - Docker 部署 SpringBoot 多模块项目")]),t._v(" "),a("h3",{attrs:{id:"项目打包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目打包"}},[t._v("#")]),t._v(" 项目打包")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("放到带有启动类模块的pom")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<build>\n    <plugins>\n        <plugin>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-maven-plugin</artifactId>\n        </plugin>\n    </plugins>\n</build>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("执行父模块（root）的 package")]),t._v(" "),a("p",[t._v("例：生成 hello-1.0-SNAPSHOT.jar 包")])])]),t._v(" "),a("h2",{attrs:{id:"docker-部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-部署"}},[t._v("#")]),t._v(" Docker 部署")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("安装配置 Docker")])]),t._v(" "),a("li",[a("p",[t._v("/usr/local 目录下新建 /docker")]),t._v(" "),a("p",[t._v("将 hello-1.0-SNAPSHOT.jar 包 放到 /usr/local/docker")])]),t._v(" "),a("li",[a("p",[t._v("/usr/local/docker 下新建 Dockerfile")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# Docker image for springboot file run\n# 基础镜像使用java\nFROM java:8\n# 作者\nMAINTAINER *** <****@qq.com>\n# VOLUME 指定了临时文件目录为/tmp。\n# 其效果是在主机 /var/lib/docker 目录下创建了一个临时文件，并链接到容器的/tmp\nVOLUME /tmp \n# 将jar包添加到容器中并更名为 hello.jar\nADD hello-1.0-SNAPSHOT.jar hello.jar \n# 运行jar包\nRUN bash -c \'touch /hello.jar\'\nENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/hello.jar"]\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("创建镜像")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ docker build -t hello "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hello 镜像名字")]),t._v("\n$ docker images\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看镜像")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("运行")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ docker run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":8080 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" hello\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 8080:8080(宿主机端口:容器端口) ; -d 守护态运行")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);