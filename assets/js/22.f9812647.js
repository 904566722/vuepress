(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{352:function(v,_,a){"use strict";a.r(_);var t=a(10),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h2",{attrs:{id:"前端知识体系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端知识体系"}},[v._v("#")]),v._v(" 前端知识体系")]),v._v(" "),a("h3",{attrs:{id:"前端三要素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端三要素"}},[v._v("#")]),v._v(" 前端三要素")]),v._v(" "),a("ol",[a("li",[v._v("HTML")]),v._v(" "),a("li",[v._v("CSS")]),v._v(" "),a("li",[v._v("JavaScript\n"),a("ul",[a("li",[v._v("Native原生JS开发")]),v._v(" "),a("li",[v._v("TypeScript微软的标准\n需要编译成JS")]),v._v(" "),a("li",[v._v("JavaScript框架\n"),a("ul",[a("li",[v._v("jQuery - 频繁的DOM操作，影响前端性能")]),v._v(" "),a("li",[v._v("Angular - Google、模块化、TypeScript语法")]),v._v(" "),a("li",[v._v("React - Facebook、虚拟DOM、JSX语言")]),v._v(" "),a("li",[v._v("Vue - 渐进式JavaScript框架，"),a("strong",[v._v("综合模块化、虚拟DOM")]),v._v("，仅视图层的处理")]),v._v(" "),a("li",[v._v("Axios - 前端通信框架，类jQuery的AJAX通信功能")])])]),v._v(" "),a("li",[v._v("UI框架\n"),a("ul",[a("li",[v._v("Ant-Design： 基于React的UI框架 - 彩蛋？？？")]),v._v(" "),a("li",[v._v("ElementUI： 基于Vue的UI框架")]),v._v(" "),a("li",[v._v("iview： 基于Vue")]),v._v(" "),a("li",[v._v("飞冰： 基于Vue")]),v._v(" "),a("li",[v._v("Bootstrap： Twitter推出")]),v._v(" "),a("li",[v._v("AmazeUI： “妹子UI”")])])]),v._v(" "),a("li",[v._v("JavaScript构建工具\n"),a("ul",[a("li",[v._v("Babel")]),v._v(" "),a("li",[v._v("WebPack")])])])])])]),v._v(" "),a("h3",{attrs:{id:"三端统一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三端统一"}},[v._v("#")]),v._v(" 三端统一")]),v._v(" "),a("h4",{attrs:{id:"混合开发（hybrid-app）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混合开发（hybrid-app）"}},[v._v("#")]),v._v(" 混合开发（Hybrid App）")]),v._v(" "),a("p",[v._v("PC、Android、IOS")]),v._v(" "),a("blockquote",[a("p",[v._v("Android->.apk IOS->.ipa")])]),v._v(" "),a("ul",[a("li",[v._v("云打包：HBuild")]),v._v(" "),a("li",[v._v("本地打包：Cordova")])]),v._v(" "),a("h3",{attrs:{id:"后端技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后端技术"}},[v._v("#")]),v._v(" 后端技术")]),v._v(" "),a("ul",[a("li",[v._v("NodeJS：为了方便前端人员开发后台应用，临时处理\n"),a("ul",[a("li",[v._v("Koa：主流框架（类似spring）")]),v._v(" "),a("li",[v._v("NPM：类似Maven")]),v._v(" "),a("li",[v._v("Yarn： 类似Maven和Gradle的关系，打包效率高")])])]),v._v(" "),a("li",[v._v("deno?")])]),v._v(" "),a("h2",{attrs:{id:"前后分离演变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前后分离演变"}},[v._v("#")]),v._v(" 前后分离演变")]),v._v(" "),a("h3",{attrs:{id:"为什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么？"}},[v._v("#")]),v._v(" 为什么？")]),v._v(" "),a("ul",[a("li",[v._v("MVC\n"),a("ul",[a("li",[v._v("前端开发重度依赖开发环境")]),v._v(" "),a("li",[v._v("前后端职责纠缠不清，数据展示不正确，谁的错？")]),v._v(" "),a("li",[v._v("前端发挥局限，优化-经常要和后端合作")])])])]),v._v(" "),a("h3",{attrs:{id:"什么是前后分离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是前后分离"}},[v._v("#")]),v._v(" 什么是前后分离")]),v._v(" "),a("h4",{attrs:{id:"基于ajax带来的spa时代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于ajax带来的spa时代"}},[v._v("#")]),v._v(" 基于AJAX带来的SPA时代")]),v._v(" "),a("blockquote",[a("p",[v._v("Asynchronous JavaScript And XML，正是提出并开始使用CDN作为静态资源存储")])]),v._v(" "),a("ul",[a("li",[v._v("谷歌 - Web2.0时代")]),v._v(" "),a("li",[v._v("缺点：前后端接口的约定")])]),v._v(" "),a("h4",{attrs:{id:"前端为主的mv-时代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端为主的mv-时代"}},[v._v("#")]),v._v(" 前端为主的MV*时代")]),v._v(" "),a("ul",[a("li",[v._v("MVC（同步通信为主）")]),v._v(" "),a("li",[v._v("MVP（最早：安卓、ios端，一步通信为主）：过度")]),v._v(" "),a("li",[v._v("MVVM（异步通信为主）：Model、View、ViewModel\n"),a("ul",[a("li",[v._v("缺点："),a("strong",[v._v("全")]),v._v("异步，对 SEO 不利。往往还需要服务端做同步渲染的降级方案；URL Design需要后端配合")])])])]),v._v(" "),a("h3",{attrs:{id:"nodejs带来的全栈时代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodejs带来的全栈时代"}},[v._v("#")]),v._v(" NodeJS带来的全栈时代")]),v._v(" "),a("blockquote",[a("p",[v._v("Soc 关注度分离")])]),v._v(" "),a("h2",{attrs:{id:"前端mvvm模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端mvvm模式"}},[v._v("#")]),v._v(" 前端MVVM模式")]),v._v(" "),a("blockquote",[a("p",[v._v("Model-View-ViewModel")])]),v._v(" "),a("ul",[a("li",[v._v("核心："),a("code",[v._v("ViewModel")]),v._v(" "),a("ul",[a("li",[v._v("该层向上与视图层进行双向数据绑定")]),v._v(" "),a("li",[v._v("向下与 Model 层通过接口请求进行数据交互")])])]),v._v(" "),a("li",[v._v("为什么要用MVVM\n"),a("ul",[a("li",[v._v("低耦合")]),v._v(" "),a("li",[v._v("可复用")]),v._v(" "),a("li",[v._v("独立开发")]),v._v(" "),a("li",[v._v("可测试")])])])]),v._v(" "),a("h2",{attrs:{id:"学习路线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习路线"}},[v._v("#")]),v._v(" 学习路线")]),v._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/904566722/mycdn/blob/master/frontend/2020/032503/01.png?raw=true",alt:""}})])])}),[],!1,null,null,null);_.default=i.exports}}]);